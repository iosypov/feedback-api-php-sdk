<?php

declare(strict_types=1);

/*
 * FeedbackAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FeedbackAPILib\Models;

use FeedbackAPILib\Utils\DateTimeHelper;
use stdClass;

/**
 * Feedback object.
 */
class FeedbackMetaData implements \JsonSerializable
{
    /**
     * @var string
     */
    private $id;

    /**
     * @var \DateTime
     */
    private $createdAt;

    /**
     * @var \DateTime|null
     */
    private $updatedAt;

    /**
     * @var string
     */
    private $userIP;

    /**
     * @var string
     */
    private $userAgent;

    /**
     * @param string $id
     * @param \DateTime $createdAt
     * @param string $userIP
     * @param string $userAgent
     */
    public function __construct(string $id, \DateTime $createdAt, string $userIP, string $userAgent)
    {
        $this->id = $id;
        $this->createdAt = $createdAt;
        $this->userIP = $userIP;
        $this->userAgent = $userAgent;
    }

    /**
     * Returns Id.
     * Unique identifier of the feedback.
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Unique identifier of the feedback.
     *
     * @required
     * @maps id
     */
    public function setId(string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Created At.
     * Date of the feedback creation.
     */
    public function getCreatedAt(): \DateTime
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     * Date of the feedback creation.
     *
     * @required
     * @maps createdAt
     * @factory \FeedbackAPILib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setCreatedAt(\DateTime $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Updated At.
     * Date of the feedback update.
     */
    public function getUpdatedAt(): ?\DateTime
    {
        return $this->updatedAt;
    }

    /**
     * Sets Updated At.
     * Date of the feedback update.
     *
     * @maps updatedAt
     * @factory \FeedbackAPILib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setUpdatedAt(?\DateTime $updatedAt): void
    {
        $this->updatedAt = $updatedAt;
    }

    /**
     * Returns User IP.
     * IP address of the user.
     */
    public function getUserIP(): string
    {
        return $this->userIP;
    }

    /**
     * Sets User IP.
     * IP address of the user.
     *
     * @required
     * @maps userIP
     */
    public function setUserIP(string $userIP): void
    {
        $this->userIP = $userIP;
    }

    /**
     * Returns User Agent.
     * User agent of the device.
     */
    public function getUserAgent(): string
    {
        return $this->userAgent;
    }

    /**
     * Sets User Agent.
     * User agent of the device.
     *
     * @required
     * @maps userAgent
     */
    public function setUserAgent(string $userAgent): void
    {
        $this->userAgent = $userAgent;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['id']            = $this->id;
        $json['createdAt']     = DateTimeHelper::toRfc3339DateTime($this->createdAt);
        if (isset($this->updatedAt)) {
            $json['updatedAt'] = DateTimeHelper::toRfc3339DateTime($this->updatedAt);
        }
        $json['userIP']        = $this->userIP;
        $json['userAgent']     = $this->userAgent;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
