<?php

declare(strict_types=1);

/*
 * FeedbackAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FeedbackAPILib\Models;

use stdClass;

/**
 * Feedback object.
 */
class FeedbackData implements \JsonSerializable
{
    /**
     * @var float|null
     */
    private $rating;

    /**
     * @var bool|null
     */
    private $sentiment;

    /**
     * @var string[]|null
     */
    private $reasons;

    /**
     * @var string|null
     */
    private $suggestion;

    /**
     * Returns Rating.
     * Rating of the feedback.
     */
    public function getRating(): ?float
    {
        return $this->rating;
    }

    /**
     * Sets Rating.
     * Rating of the feedback.
     *
     * @maps rating
     */
    public function setRating(?float $rating): void
    {
        $this->rating = $rating;
    }

    /**
     * Returns Sentiment.
     * Sentiment of the feedback.
     */
    public function getSentiment(): ?bool
    {
        return $this->sentiment;
    }

    /**
     * Sets Sentiment.
     * Sentiment of the feedback.
     *
     * @maps sentiment
     */
    public function setSentiment(?bool $sentiment): void
    {
        $this->sentiment = $sentiment;
    }

    /**
     * Returns Reasons.
     * Reasons of the feedback.
     *
     * @return string[]|null
     */
    public function getReasons(): ?array
    {
        return $this->reasons;
    }

    /**
     * Sets Reasons.
     * Reasons of the feedback.
     *
     * @maps reasons
     *
     * @param string[]|null $reasons
     */
    public function setReasons(?array $reasons): void
    {
        $this->reasons = $reasons;
    }

    /**
     * Returns Suggestion.
     * Suggestion of the feedback.
     */
    public function getSuggestion(): ?string
    {
        return $this->suggestion;
    }

    /**
     * Sets Suggestion.
     * Suggestion of the feedback.
     *
     * @maps suggestion
     */
    public function setSuggestion(?string $suggestion): void
    {
        $this->suggestion = $suggestion;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->rating)) {
            $json['rating']     = $this->rating;
        }
        if (isset($this->sentiment)) {
            $json['sentiment']  = $this->sentiment;
        }
        if (isset($this->reasons)) {
            $json['reasons']    = $this->reasons;
        }
        if (isset($this->suggestion)) {
            $json['suggestion'] = $this->suggestion;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
