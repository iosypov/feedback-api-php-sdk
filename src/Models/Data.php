<?php

declare(strict_types=1);

/*
 * FeedbackAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FeedbackAPILib\Models;

use stdClass;

class Data implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $code;

    /**
     * @var string|null
     */
    private $expected;

    /**
     * @var string|null
     */
    private $received;

    /**
     * @var string[]|null
     */
    private $path;

    /**
     * @var string|null
     */
    private $message;

    /**
     * Returns Code.
     */
    public function getCode(): ?string
    {
        return $this->code;
    }

    /**
     * Sets Code.
     *
     * @maps code
     */
    public function setCode(?string $code): void
    {
        $this->code = $code;
    }

    /**
     * Returns Expected.
     */
    public function getExpected(): ?string
    {
        return $this->expected;
    }

    /**
     * Sets Expected.
     *
     * @maps expected
     */
    public function setExpected(?string $expected): void
    {
        $this->expected = $expected;
    }

    /**
     * Returns Received.
     */
    public function getReceived(): ?string
    {
        return $this->received;
    }

    /**
     * Sets Received.
     *
     * @maps received
     */
    public function setReceived(?string $received): void
    {
        $this->received = $received;
    }

    /**
     * Returns Path.
     *
     * @return string[]|null
     */
    public function getPath(): ?array
    {
        return $this->path;
    }

    /**
     * Sets Path.
     *
     * @maps path
     *
     * @param string[]|null $path
     */
    public function setPath(?array $path): void
    {
        $this->path = $path;
    }

    /**
     * Returns Message.
     */
    public function getMessage(): ?string
    {
        return $this->message;
    }

    /**
     * Sets Message.
     *
     * @maps message
     */
    public function setMessage(?string $message): void
    {
        $this->message = $message;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->code)) {
            $json['code']     = $this->code;
        }
        if (isset($this->expected)) {
            $json['expected'] = $this->expected;
        }
        if (isset($this->received)) {
            $json['received'] = $this->received;
        }
        if (isset($this->path)) {
            $json['path']     = $this->path;
        }
        if (isset($this->message)) {
            $json['message']  = $this->message;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
